- name: Install Microk8s
  hosts: all
  gather_facts: yes
  become: true
  become_method: sudo
  vars:
    microk8s_version: latest
  tasks:
    - name: Update apt cache
      apt:
        update_cache: yes

    - name: Install snapd
      apt:
        name: snapd
        state: present

    - name: Ensure snapd service is started
      systemd:
        name: snapd
        state: started
        enabled: yes

    - name: Install MicroK8s
      snap:
        name: microk8s
        classic: yes
        channel: "{{ microk8s_version }}"
        state: present

    - name: Refresh MicroK8s certificates
      command: microk8s refresh-certs -e ca.crt

- name: Get and execute join commands
  hosts: master_nodes
  tasks:
    - name: Generate and capture join commands for worker nodes
      shell: |
        for i in $(seq 1 {{ groups['worker_nodes'] | length }}); do
          microk8s add-node | grep microk8s | head -2 | tail -1;
        done
      register: microk8s_join_commands
      become: true

    - name: Split join commands into a list
      set_fact:
        microk8s_join_commands_list: "{{ microk8s_join_commands.stdout_lines }}"

- name: Join worker nodes
  hosts: worker_nodes
  tasks:
    - name: Join each worker node to the cluster
      command: "{{ hostvars[groups['master_nodes'][0]].microk8s_join_commands_list[play_hosts.index(inventory_hostname)] }}"
      become: true

- name: Configure master node
  hosts: master_nodes
  gather_facts: yes
  become: true
  become_method: sudo
  vars:
    microk8s_addons: dns ingress metrics-server cert-manager
    user: "{{ ansible_user_id }}"
    cert_manager_email: someone@something.com
  tasks:
#    - name: Add user to microk8s group
#      user:
#        name: ubuntu
#        groups: microk8s
#        append: yes

    - name: Enable common MicroK8s addons
      command: microk8s enable {{ microk8s_addons }}

    - name: Display MicroK8s status
      command: microk8s status --wait-ready
      register: microk8s_status

    - debug:
        var: microk8s_status.stdout

    - name: Get kubectl config
      shell: microk8s config > ./kube-config.yaml

    - fetch:
        src: ./kube-config.yaml
        dest: ../kubeconfig/{{ inventory_hostname }}.yaml
        flat: yes

    - name: Install Helm
      snap:
        name: helm
        classic: yes
        state: present

    - name: Install Cert issuer
      community.kubernetes.helm:
        kubeconfig: ./kube-config.yaml
        name: cert-issuer
        chart_repo_url: https://tonsv2.github.io/cert-issuer-chart
        chart_ref: cert-issuer
        release_state: present
        namespace: cert-manager
        create_namespace: true
        values:
          email: "{{ cert_manager_email }}"
          server: https://acme-v02.api.letsencrypt.org/directory
          ingressClass: public
