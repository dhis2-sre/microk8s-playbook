- name: Harden Server
  hosts: all
  become: true

  vars:
    ansible_python_interpreter: /usr/bin/python3.10
    allowed_ssh_users:
      - ubuntu

  tasks:
    # 1. Update and Upgrade
    - name: Update and upgrade apt packages
      apt:
        update_cache: yes
        upgrade: dist

    - name: Install unattended-upgrades
      apt:
        name: unattended-upgrades
        state: present

    - name: Enable unattended-upgrades
      lineinfile:
        path: /etc/apt/apt.conf.d/20auto-upgrades
        regexp: '^\s*\"(APT::Periodic::Unattended-Upgrade)\".*;'
        line: '"APT::Periodic::Unattended-Upgrade" "1";'

    # 2. SSH Hardening
    - name: Disable root login
      lineinfile:
        path: /etc/ssh/sshd_config
        regexp: '^PermitRootLogin'
        line: 'PermitRootLogin no'
        state: present

    - name: Disable password authentication
      lineinfile:
        path: /etc/ssh/sshd_config
        regexp: '^PasswordAuthentication'
        line: 'PasswordAuthentication no'
        state: present

    - name: Allow specific SSH users
      lineinfile:
        path: /etc/ssh/sshd_config
        line: "AllowUsers {{ allowed_ssh_users | join(' ') }}"
        state: present

    - name: Restart SSH service
      service:
        name: sshd
        state: restarted

    # 3. Minimize Attack Surface
    - name: Remove unnecessary packages
      apt:
        name:
          - telnet
          - ftp
          - rsh-client
          - nfs-common
          - cups
          - dnsutils
        state: absent

#    - name: Disable unnecessary services
#      service:
#        name: "{{ item }}"
#        state: stopped
#        enabled: no
#      loop:
#        - cups
#        - avahi-daemon

    # 4. Secure /tmp
    - name: Secure /tmp partition
      mount:
        path: /tmp
        src: tmpfs
        fstype: tmpfs
        opts: "defaults,noexec,nosuid,nodev"
        state: mounted

    # 5. Logging and Monitoring
    - name: Install fail2ban
      apt:
        name: fail2ban
        state: present

    - name: Configure fail2ban
      copy:
        src: ../files/fail2ban.local
        dest: /etc/fail2ban/jail.local
        owner: root
        group: root
        mode: '0644'

    - name: Restart fail2ban
      service:
        name: fail2ban
        state: restarted

    # 6. Kernel Hardening
    - name: Set kernel parameters for hardening
      sysctl:
        name: "{{ item.key }}"
        value: "{{ item.value }}"
        state: present
      loop:
        # Enables TCP SYN cookies to help prevent SYN flood attacks
        - { key: "net.ipv4.tcp_syncookies", value: "1" }
        # Enables reverse path filtering to mitigate IP spoofing
        - { key: "net.ipv4.conf.all.rp_filter", value: "1" }
        # Disables source routing, which is often exploited for attacks
        - { key: "net.ipv4.conf.all.accept_source_route", value: "0" }
        # Ignores ICMP echo requests sent to broadcast addresses to prevent smurf attacks
        - { key: "net.ipv4.icmp_echo_ignore_broadcasts", value: "1" }
        # Logs packets with invalid IP addresses for easier troubleshooting and detection of potential attacks
        - { key: "net.ipv4.conf.all.log_martians", value: "1" }
        # IP forwarding is required for proper network traffic forwarding in a multi-node setup
        - { key: "net.ipv4.ip_forward", value: "1" }
        # Ensures all newly created interfaces also enforce IP spoofing prevention, complementing net.ipv4.conf.all.rp_filter
        - { key: "net.ipv4.conf.default.rp_filter", value: "1" }
        # Ensures any newly added interfaces also reject source-routed packets by default, maintaining a secure baseline
        - { key: "net.ipv4.conf.default.accept_source_route", value: "0" }
        # Randomizes the memory address space of processes, making it significantly harder for attackers to predict addresses during exploitation attempts, such as buffer overflows
        - { key: "kernel.randomize_va_space", value: "2" }
        # Prevents sensitive information (like passwords or cryptographic keys) from being leaked through core dumps, which can be exploited by attackers to gain further system access
        - { key: "fs.suid_dumpable", value: "0" }

    - name: Apply sysctl changes
      command: sysctl -p

    # 7. Configure Firewall
    - include_tasks: ./_firewall.yaml
